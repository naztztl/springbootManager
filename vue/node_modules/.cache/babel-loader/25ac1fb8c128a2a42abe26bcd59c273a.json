{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nimport HomeView from '../views/Manage.vue';\nVue.use(VueRouter);\nvar routes = [{\n  path: '/login',\n  name: 'Login',\n  component: function component() {\n    return import('../views/Login.vue');\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: function component() {\n    return import('../views/Register.vue');\n  }\n}, {\n  path: '*',\n  name: '404',\n  component: function component() {\n    return import('../views/404.vue');\n  }\n}];\nvar router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: routes\n}); //注意 刷新页面会导致页面路由重置\n\nexport var setRoutes = function setRoutes() {\n  var storeMenus = localStorage.getItem(\"menus\");\n\n  if (storeMenus) {\n    //拼装动态路由\n    var manageRoute = {\n      path: '/',\n      name: 'Manage',\n      component: function component() {\n        return import('../views/Manage.vue');\n      },\n      redirect: \"/home\",\n      children: []\n    }; //\n\n    var menus = JSON.parse(storeMenus);\n    menus.forEach(function (item) {\n      if (item.path) {\n        var itemMenu = {\n          path: item.path.replace('/', ''),\n          name: item.name,\n          component: function component() {\n            return import('../views/' + item.pagePath + '.vue');\n          }\n        };\n        manageRoute.children.push(itemMenu);\n      } else if (item.children.length) {\n        item.children.forEach(function (item) {\n          if (item.path) {\n            var _itemMenu = {\n              path: item.path.replace('/', ''),\n              name: item.name,\n              component: function component() {\n                return import('../views/' + item.pagePath + '.vue');\n              }\n            };\n            manageRoute.children.push(_itemMenu);\n          }\n        });\n      }\n    }); //获取当前的路由对象名称数组\n\n    var currentRouteNames = router.getRoutes().map(function (v) {\n      return v.name;\n    });\n\n    if (!currentRouteNames.includes('Manage')) {\n      //动态添加到现在的路由对象中去\n      router.addRoute(manageRoute);\n    }\n  }\n};\nsetRoutes();\nrouter.beforeEach(function (to, from, next) {\n  console.log(from);\n  localStorage.setItem(\"currentPathName\", to.name); //设置当前的路由名称,为了在Header组件中去使用\n\n  store.commit(\"setPath\"); //触发store的数据更新\n  // let user = JSON.parse(localStorage.getItem('user'));\n  // if (to.path === '/login' || to.path === '/register') return next()\n  // // //获取用户页面token信息\n  // // console.log('1: ' + localStorage.getItem('user'))\n  // // let token = localStorage.getItem('token')\n  // // //如果token数据为null则跳转到指定路径\n  // if (!user) {\n  //   return next(\"/login\")\n  // } else {\n  //   console.log('1: ' + user.token)\n  //   if (!user.token) return next(\"/login\")\n  // }\n\n  next(); //放行路由\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","HomeView","use","routes","path","name","component","router","mode","base","process","env","BASE_URL","setRoutes","storeMenus","localStorage","getItem","manageRoute","redirect","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","currentRouteNames","getRoutes","map","v","includes","addRoute","beforeEach","to","from","next","console","log","setItem","commit"],"sources":["D:/CodeFile/java/SpringBoot/springboot+vue/springboot_manage(generate)/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from \"@/store\";\r\nimport HomeView from '../views/Manage.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('../views/Register.vue')\r\n  },\r\n  {\r\n    path: '*',\r\n    name: '404',\r\n    component: () => import('../views/404.vue')\r\n  },\r\n\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\n//注意 刷新页面会导致页面路由重置\r\nexport const setRoutes = () => {\r\n  const storeMenus = localStorage.getItem(\"menus\")\r\n  if (storeMenus) {\r\n    //拼装动态路由\r\n    const manageRoute = { path: '/', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/home\", children: [] }\r\n    //\r\n    const menus = JSON.parse(storeMenus)\r\n    menus.forEach(item => {\r\n      if (item.path) {\r\n        let itemMenu = {\r\n          path: item.path.replace('/', ''),\r\n          name: item.name,\r\n          component: () => import('../views/' + item.pagePath + '.vue')\r\n        }\r\n        manageRoute.children.push(itemMenu)\r\n      } else if (item.children.length) {\r\n        item.children.forEach(item => {\r\n          if (item.path) {\r\n            let itemMenu = {\r\n              path: item.path.replace('/', ''),\r\n              name: item.name,\r\n              component: () => import('../views/' + item.pagePath + '.vue')\r\n            }\r\n            manageRoute.children.push(itemMenu)\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    //获取当前的路由对象名称数组\r\n    const currentRouteNames = router.getRoutes().map(v => v.name)\r\n    if (!currentRouteNames.includes('Manage')) {\r\n      //动态添加到现在的路由对象中去\r\n      router.addRoute(manageRoute)\r\n    }\r\n  }\r\n}\r\n\r\nsetRoutes()\r\n\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log(from)\r\n  localStorage.setItem(\"currentPathName\", to.name)  //设置当前的路由名称,为了在Header组件中去使用\r\n  store.commit(\"setPath\")  //触发store的数据更新\r\n\r\n  // let user = JSON.parse(localStorage.getItem('user'));\r\n  // if (to.path === '/login' || to.path === '/register') return next()\r\n  // // //获取用户页面token信息\r\n  // // console.log('1: ' + localStorage.getItem('user'))\r\n  // // let token = localStorage.getItem('token')\r\n  // // //如果token数据为null则跳转到指定路径\r\n  // if (!user) {\r\n  //   return next(\"/login\")\r\n  // } else {\r\n  //   console.log('1: ' + user.token)\r\n  //   if (!user.token) return next(\"/login\")\r\n  // }\r\n  next()  //放行路由\r\n})\r\n\r\nexport default router\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}