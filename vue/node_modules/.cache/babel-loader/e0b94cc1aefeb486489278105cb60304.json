{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nimport HomeView from '../views/Manage.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  component: () => import('../views/Manage.vue'),\n  // redirect: \"/home\",\n  children: [{\n    path: 'home',\n    name: '首页',\n    component: () => import('../views/Home.vue')\n  }, {\n    path: 'user',\n    name: '用户管理',\n    component: () => import('../views/User.vue')\n  }, {\n    path: 'role',\n    name: '角色管理',\n    component: () => import('../views/Role.vue')\n  }, {\n    path: 'menu',\n    name: '菜单管理',\n    component: () => import('../views/Menu.vue')\n  }, {\n    path: 'person',\n    name: '个人信息',\n    component: () => import('../views/Person.vue')\n  }, {\n    path: 'file',\n    name: '文件管理',\n    component: () => import('../views/File.vue')\n  }]\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/Register.vue')\n}, {\n  path: '*',\n  name: 'NotFound',\n  component: () => import('../views/404.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n}); //注意 刷新页面会导致页面路由重置\n// export const setRoutes = () => {\n//   const storeMenus = localStorage.getItem(\"menus\")\n//   if (storeMenus) {\n//     //拼装动态路由\n//     const manageRoute = { path: '/', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/home\", children: [] }\n//     //\n//     const menus = JSON.parse(storeMenus)\n//     menus.forEach(item => {\n//       if (item.path) {\n//         let itemMenu = {\n//           path: item.path.replace('/', ''),\n//           name: item.name,\n//           component: () => import('../views/' + item.pagePath + '.vue')\n//         }\n//         manageRoute.children.push(itemMenu)\n//       } else if (item.children.length) {\n//         item.children.forEach(item => {\n//           if (item.path) {\n//             let itemMenu = {\n//               path: item.path.replace('/', ''),\n//               name: item.name,\n//               component: () => import('../views/' + item.pagePath + '.vue')\n//             }\n//             manageRoute.children.push(itemMenu)\n//           }\n//         })\n//       }\n//     })\n//\n//     //获取当前的路由对象名称数组\n//     const currentRouteNames = router.getRoutes().map(v => v.name)\n//     if (!currentRouteNames.includes('Manage')) {\n//       //动态添加到现在的路由对象中去\n//       router.addRoute(manageRoute)\n//     }\n//   }\n// }\n// setRoutes()\n\nrouter.beforeEach((to, from, next) => {\n  console.log(from);\n  localStorage.setItem(\"currentPathName\", to.name); //设置当前的路由名称,为了在Header组件中去使用\n\n  store.commit(\"setPath\"); //触发store的数据更新\n\n  let user = JSON.parse(localStorage.getItem('user'));\n  if (to.path === '/login' || to.path === '/register') return next(); // //获取用户页面token信息\n  // console.log('1: ' + localStorage.getItem('user'))\n  // let token = localStorage.getItem('token')\n  // //如果token数据为null则跳转到指定路径\n\n  if (!user) {\n    return next(\"/login\");\n  } else {\n    console.log('1: ' + user.token);\n    if (!user.token) return next(\"/login\");\n  }\n\n  next(); //放行路由\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","HomeView","use","routes","path","component","children","name","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","console","log","localStorage","setItem","commit","user","JSON","parse","getItem","token"],"sources":["D:/CodeFile/java/SpringBoot/springboot+vue/springboot_manage(generate)/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from \"@/store\";\r\nimport HomeView from '../views/Manage.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: () => import('../views/Manage.vue'),\r\n    // redirect: \"/home\",\r\n    children: [\r\n      { path: 'home', name: '首页', component: () => import('../views/Home.vue')},\r\n      { path: 'user', name: '用户管理', component: () => import('../views/User.vue')},\r\n      { path: 'role', name: '角色管理', component: () => import('../views/Role.vue')},\r\n      { path: 'menu', name: '菜单管理', component: () => import('../views/Menu.vue')},\r\n      { path: 'person', name: '个人信息', component: () => import('../views/Person.vue')},\r\n      { path: 'file', name: '文件管理', component: () => import('../views/File.vue')},\r\n    ]\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('../views/Register.vue')\r\n  },\r\n  {\r\n    path: '*',\r\n    name: 'NotFound',\r\n    component: () => import('../views/404.vue')\r\n  },\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\n//注意 刷新页面会导致页面路由重置\r\n// export const setRoutes = () => {\r\n//   const storeMenus = localStorage.getItem(\"menus\")\r\n//   if (storeMenus) {\r\n//     //拼装动态路由\r\n//     const manageRoute = { path: '/', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/home\", children: [] }\r\n//     //\r\n//     const menus = JSON.parse(storeMenus)\r\n//     menus.forEach(item => {\r\n//       if (item.path) {\r\n//         let itemMenu = {\r\n//           path: item.path.replace('/', ''),\r\n//           name: item.name,\r\n//           component: () => import('../views/' + item.pagePath + '.vue')\r\n//         }\r\n//         manageRoute.children.push(itemMenu)\r\n//       } else if (item.children.length) {\r\n//         item.children.forEach(item => {\r\n//           if (item.path) {\r\n//             let itemMenu = {\r\n//               path: item.path.replace('/', ''),\r\n//               name: item.name,\r\n//               component: () => import('../views/' + item.pagePath + '.vue')\r\n//             }\r\n//             manageRoute.children.push(itemMenu)\r\n//           }\r\n//         })\r\n//       }\r\n//     })\r\n//\r\n//     //获取当前的路由对象名称数组\r\n//     const currentRouteNames = router.getRoutes().map(v => v.name)\r\n//     if (!currentRouteNames.includes('Manage')) {\r\n//       //动态添加到现在的路由对象中去\r\n//       router.addRoute(manageRoute)\r\n//     }\r\n//   }\r\n// }\r\n\r\n// setRoutes()\r\n\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log(from)\r\n  localStorage.setItem(\"currentPathName\", to.name)  //设置当前的路由名称,为了在Header组件中去使用\r\n  store.commit(\"setPath\")  //触发store的数据更新\r\n\r\n  let user = JSON.parse(localStorage.getItem('user'));\r\n  if (to.path === '/login' || to.path === '/register') return next()\r\n  // //获取用户页面token信息\r\n  // console.log('1: ' + localStorage.getItem('user'))\r\n  // let token = localStorage.getItem('token')\r\n  // //如果token数据为null则跳转到指定路径\r\n  if (!user) {\r\n    return next(\"/login\")\r\n  } else {\r\n    console.log('1: ' + user.token)\r\n    if (!user.token) return next(\"/login\")\r\n  }\r\n  next()  //放行路由\r\n})\r\n\r\nexport default router\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}