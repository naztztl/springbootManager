{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nimport HomeView from '../views/Manage.vue';\nVue.use(VueRouter);\nvar routes = [{\n  path: '/',\n  component: function component() {\n    return import('../views/Manage.vue');\n  },\n  // redirect: \"/home\",\n  children: [{\n    path: 'home',\n    name: '首页',\n    component: function component() {\n      return import('../views/Home.vue');\n    }\n  }, {\n    path: 'user',\n    name: '用户管理',\n    component: function component() {\n      return import('../views/User.vue');\n    }\n  }, {\n    path: 'role',\n    name: '角色管理',\n    component: function component() {\n      return import('../views/Role.vue');\n    }\n  }, {\n    path: 'person',\n    name: '个人信息',\n    component: function component() {\n      return import('../views/Person.vue');\n    }\n  }, {\n    path: 'file',\n    name: '文件管理',\n    component: function component() {\n      return import('../views/File.vue');\n    }\n  }]\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import(\n    /* webpackChunkName: \"about\" */\n    '../views/AboutView.vue');\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: function component() {\n    return import('../views/Login.vue');\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: function component() {\n    return import('../views/Register.vue');\n  }\n}];\nvar router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  console.log(from);\n  localStorage.setItem(\"currentPathName\", to.name); //设置当前的路由名称,为了在Header组件中去使用\n\n  store.commit(\"setPath\"); //触发store的数据更新\n\n  var user = JSON.parse(localStorage.getItem('user'));\n\n  if (user) {\n    //判断是否已经登录\n    console.log('这是通过拦截后到处理', from);\n    next();\n  } else {\n    next({\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      } //登录成功后重定向到当前页面\n\n    });\n  } // if (to.path === '/login') return next()\n  // //获取用户页面token信息\n  // console.log('1: ' + localStorage.getItem('user'))\n  // let token = localStorage.getItem('token')\n  // //如果token数据为null则跳转到指定路径\n  // if (token === null) return next(\"/login\")\n\n\n  next(); //放行路由\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","HomeView","use","routes","path","component","children","name","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","console","log","localStorage","setItem","commit","user","JSON","parse","getItem","query","redirect","fullPath"],"sources":["D:/CodeFile/java/SpringBoot/springboot+vue/springboot_manage(generate)/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from \"@/store\";\r\nimport HomeView from '../views/Manage.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: () => import('../views/Manage.vue'),\r\n    // redirect: \"/home\",\r\n    children: [\r\n      { path: 'home', name: '首页', component: () => import('../views/Home.vue')},\r\n      { path: 'user', name: '用户管理', component: () => import('../views/User.vue')},\r\n      { path: 'role', name: '角色管理', component: () => import('../views/Role.vue')},\r\n      { path: 'person', name: '个人信息', component: () => import('../views/Person.vue')},\r\n      { path: 'file', name: '文件管理', component: () => import('../views/File.vue')},\r\n    ]\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'about',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('../views/Register.vue')\r\n  },\r\n\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log(from)\r\n  localStorage.setItem(\"currentPathName\", to.name)  //设置当前的路由名称,为了在Header组件中去使用\r\n  store.commit(\"setPath\")  //触发store的数据更新\r\n\r\n  let user = JSON.parse(localStorage.getItem('user'));\r\n  if (user) {   //判断是否已经登录\r\n    console.log('这是通过拦截后到处理',from);\r\n\r\n    next();\r\n  } else {\r\n    next({\r\n      path: '/login',\r\n      query: {redirect: to.fullPath}   //登录成功后重定向到当前页面\r\n    })\r\n  }\r\n  // if (to.path === '/login') return next()\r\n  // //获取用户页面token信息\r\n  // console.log('1: ' + localStorage.getItem('user'))\r\n  // let token = localStorage.getItem('token')\r\n  // //如果token数据为null则跳转到指定路径\r\n  // if (token === null) return next(\"/login\")\r\n\r\n  next()  //放行路由\r\n})\r\n\r\nexport default router\r\n"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,SAAR;AAEA,IAAMI,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GADR;EAEEC,SAAS,EAAE;IAAA,OAAM,OAAO,qBAAP,CAAN;EAAA,CAFb;EAGE;EACAC,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,MAAR;IAAgBG,IAAI,EAAE,IAAtB;IAA4BF,SAAS,EAAE;MAAA,OAAM,OAAO,mBAAP,CAAN;IAAA;EAAvC,CADQ,EAER;IAAED,IAAI,EAAE,MAAR;IAAgBG,IAAI,EAAE,MAAtB;IAA8BF,SAAS,EAAE;MAAA,OAAM,OAAO,mBAAP,CAAN;IAAA;EAAzC,CAFQ,EAGR;IAAED,IAAI,EAAE,MAAR;IAAgBG,IAAI,EAAE,MAAtB;IAA8BF,SAAS,EAAE;MAAA,OAAM,OAAO,mBAAP,CAAN;IAAA;EAAzC,CAHQ,EAIR;IAAED,IAAI,EAAE,QAAR;IAAkBG,IAAI,EAAE,MAAxB;IAAgCF,SAAS,EAAE;MAAA,OAAM,OAAO,qBAAP,CAAN;IAAA;EAA3C,CAJQ,EAKR;IAAED,IAAI,EAAE,MAAR;IAAgBG,IAAI,EAAE,MAAtB;IAA8BF,SAAS,EAAE;MAAA,OAAM,OAAO,mBAAP,CAAN;IAAA;EAAzC,CALQ;AAJZ,CADa,EAab;EACED,IAAI,EAAE,QADR;EAEEG,IAAI,EAAE,OAFR;EAGE;EACA;EACA;EACAF,SAAS,EAAE;IAAA,OAAM;IAAO;IAAgC,wBAAvC,CAAN;EAAA;AANb,CAba,EAqBb;EACED,IAAI,EAAE,QADR;EAEEG,IAAI,EAAE,OAFR;EAGEF,SAAS,EAAE;IAAA,OAAM,OAAO,oBAAP,CAAN;EAAA;AAHb,CArBa,EA0Bb;EACED,IAAI,EAAE,WADR;EAEEG,IAAI,EAAE,UAFR;EAGEF,SAAS,EAAE;IAAA,OAAM,OAAO,uBAAP,CAAN;EAAA;AAHb,CA1Ba,CAAf;AAkCA,IAAMG,MAAM,GAAG,IAAIT,SAAJ,CAAc;EAC3BU,IAAI,EAAE,SADqB;EAE3BC,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFS;EAG3BV,MAAM,EAANA;AAH2B,CAAd,CAAf;AAMAK,MAAM,CAACM,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;EACpCC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACAI,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCN,EAAE,CAACR,IAA3C,EAFoC,CAEc;;EAClDP,KAAK,CAACsB,MAAN,CAAa,SAAb,EAHoC,CAGX;;EAEzB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAX,CAAX;;EACA,IAAIH,IAAJ,EAAU;IAAI;IACZL,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,IAAzB;IAEAC,IAAI;EACL,CAJD,MAIO;IACLA,IAAI,CAAC;MACHb,IAAI,EAAE,QADH;MAEHuB,KAAK,EAAE;QAACC,QAAQ,EAAEb,EAAE,CAACc;MAAd,CAFJ,CAE8B;;IAF9B,CAAD,CAAJ;EAID,CAfmC,CAgBpC;EACA;EACA;EACA;EACA;EACA;;;EAEAZ,IAAI,GAvBgC,CAuB5B;AACT,CAxBD;AA0BA,eAAeT,MAAf"},"metadata":{},"sourceType":"module"}