{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nimport HomeView from '../views/Manage.vue';\nVue.use(VueRouter);\nvar routes = [{\n  path: '/login',\n  name: 'Login',\n  component: function component() {\n    return import('../views/Login.vue');\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: function component() {\n    return import('../views/Register.vue');\n  }\n}];\nvar router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: routes\n});\nexport var setRoutes = function setRoutes() {\n  var storeMenus = localStorage.getItem(\"menus\");\n\n  if (storeMenus) {\n    //拼装动态路由\n    var manageRoute = {\n      path: '/',\n      component: function component() {\n        return import('../views/Manage.vue');\n      },\n      children: []\n    }; // redirect: \"/home\",\n\n    var menus = JSON.parse(storeMenus);\n    menus.forEach(function (item) {\n      if (item.path) {\n        var _itemMenu = {\n          path: item.path.replace('/', ''),\n          name: item.name,\n          component: function component() {\n            return import('../views/Manage' + item.pagePath + '.vue');\n          }\n        };\n      }\n\n      manageRoute.children.push(itemMenu);\n    }); //动态添加到现在的路由对象中去\n\n    router.addRoute(manageRoute);\n  }\n};\nrouter.addRoute();\nrouter.beforeEach(function (to, from, next) {\n  console.log(from);\n  localStorage.setItem(\"currentPathName\", to.name); //设置当前的路由名称,为了在Header组件中去使用\n\n  store.commit(\"setPath\"); //触发store的数据更新\n\n  var user = JSON.parse(localStorage.getItem('user'));\n  if (to.path === '/login' || to.path === '/register') return next(); // //获取用户页面token信息\n  // console.log('1: ' + localStorage.getItem('user'))\n  // let token = localStorage.getItem('token')\n  // //如果token数据为null则跳转到指定路径\n\n  if (!user) {\n    return next(\"/login\");\n  } else {\n    console.log('1: ' + user.token);\n    if (!user.token) return next(\"/login\");\n  }\n\n  next(); //放行路由\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","HomeView","use","routes","path","name","component","router","mode","base","process","env","BASE_URL","setRoutes","storeMenus","localStorage","getItem","manageRoute","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","addRoute","beforeEach","to","from","next","console","log","setItem","commit","user","token"],"sources":["D:/CodeFile/java/SpringBoot/springboot+vue/springboot_manage(generate)/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport store from \"@/store\";\r\nimport HomeView from '../views/Manage.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('../views/Register.vue')\r\n  },\r\n\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport const setRoutes = () => {\r\n  const storeMenus = localStorage.getItem(\"menus\")\r\n  if (storeMenus) {\r\n    //拼装动态路由\r\n    const manageRoute = { path: '/', component: () => import('../views/Manage.vue'), children: [] }\r\n          // redirect: \"/home\",\r\n    const menus = JSON.parse(storeMenus)\r\n    menus.forEach(item => {\r\n      if (item.path) {\r\n        let itemMenu = {\r\n          path: item.path.replace('/', ''),\r\n          name: item.name,\r\n          component: () => import('../views/Manage' + item.pagePath + '.vue')\r\n        }\r\n      }\r\n\r\n      manageRoute.children.push(itemMenu)\r\n    })\r\n\r\n    //动态添加到现在的路由对象中去\r\n    router.addRoute(manageRoute)\r\n  }\r\n}\r\n\r\nrouter.addRoute()\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log(from)\r\n  localStorage.setItem(\"currentPathName\", to.name)  //设置当前的路由名称,为了在Header组件中去使用\r\n  store.commit(\"setPath\")  //触发store的数据更新\r\n\r\n  let user = JSON.parse(localStorage.getItem('user'));\r\n  if (to.path === '/login' || to.path === '/register') return next()\r\n  // //获取用户页面token信息\r\n  // console.log('1: ' + localStorage.getItem('user'))\r\n  // let token = localStorage.getItem('token')\r\n  // //如果token数据为null则跳转到指定路径\r\n  if (!user) {\r\n    return next(\"/login\")\r\n  } else {\r\n    console.log('1: ' + user.token)\r\n    if (!user.token) return next(\"/login\")\r\n  }\r\n\r\n  next()  //放行路由\r\n})\r\n\r\nexport default router\r\n"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,SAAR;AAEA,IAAMI,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAE;IAAA,OAAM,OAAO,oBAAP,CAAN;EAAA;AAHb,CADa,EAMb;EACEF,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,UAFR;EAGEC,SAAS,EAAE;IAAA,OAAM,OAAO,uBAAP,CAAN;EAAA;AAHb,CANa,CAAf;AAcA,IAAMC,MAAM,GAAG,IAAIR,SAAJ,CAAc;EAC3BS,IAAI,EAAE,SADqB;EAE3BC,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFS;EAG3BT,MAAM,EAANA;AAH2B,CAAd,CAAf;AAMA,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY,GAAM;EAC7B,IAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;;EACA,IAAIF,UAAJ,EAAgB;IACd;IACA,IAAMG,WAAW,GAAG;MAAEb,IAAI,EAAE,GAAR;MAAaE,SAAS,EAAE;QAAA,OAAM,OAAO,qBAAP,CAAN;MAAA,CAAxB;MAA6DY,QAAQ,EAAE;IAAvE,CAApB,CAFc,CAGR;;IACN,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWP,UAAX,CAAd;IACAK,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI,EAAI;MACpB,IAAIA,IAAI,CAACnB,IAAT,EAAe;QACb,IAAIoB,SAAQ,GAAG;UACbpB,IAAI,EAAEmB,IAAI,CAACnB,IAAL,CAAUqB,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CADO;UAEbpB,IAAI,EAAEkB,IAAI,CAAClB,IAFE;UAGbC,SAAS,EAAE;YAAA,OAAM,OAAO,oBAAoBiB,IAAI,CAACG,QAAzB,GAAoC,MAA3C,CAAN;UAAA;QAHE,CAAf;MAKD;;MAEDT,WAAW,CAACC,QAAZ,CAAqBS,IAArB,CAA0BH,QAA1B;IACD,CAVD,EALc,CAiBd;;IACAjB,MAAM,CAACqB,QAAP,CAAgBX,WAAhB;EACD;AACF,CAtBM;AAwBPV,MAAM,CAACqB,QAAP;AAEArB,MAAM,CAACsB,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;EACpCC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACAhB,YAAY,CAACoB,OAAb,CAAqB,iBAArB,EAAwCL,EAAE,CAACzB,IAA3C,EAFoC,CAEc;;EAClDL,KAAK,CAACoC,MAAN,CAAa,SAAb,EAHoC,CAGX;;EAEzB,IAAIC,IAAI,GAAGjB,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;EACA,IAAIc,EAAE,CAAC1B,IAAH,KAAY,QAAZ,IAAwB0B,EAAE,CAAC1B,IAAH,KAAY,WAAxC,EAAqD,OAAO4B,IAAI,EAAX,CANjB,CAOpC;EACA;EACA;EACA;;EACA,IAAI,CAACK,IAAL,EAAW;IACT,OAAOL,IAAI,CAAC,QAAD,CAAX;EACD,CAFD,MAEO;IACLC,OAAO,CAACC,GAAR,CAAY,QAAQG,IAAI,CAACC,KAAzB;IACA,IAAI,CAACD,IAAI,CAACC,KAAV,EAAiB,OAAON,IAAI,CAAC,QAAD,CAAX;EAClB;;EAEDA,IAAI,GAlBgC,CAkB5B;AACT,CAnBD;AAqBA,eAAezB,MAAf"},"metadata":{},"sourceType":"module"}